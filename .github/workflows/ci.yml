name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  validate:
    runs-on: ubuntu-latest
    outputs:
      commit: ${{ steps.validate.outputs.commit }}

    steps:
    - uses: actions/checkout@v2

    - name: Validate
      id: validate
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: |
        python ./scripts/validate_commit.py

  build:
    runs-on: ubuntu-latest
    needs: validate
    strategy:
      matrix:
        python-version: [2.7, 3.7]
      max-parallel: 1

    steps:
    - uses: actions/checkout@v2
      if: "!startsWith(needs.validate.outputs.commit, 'chore:')"

    - name: Set up Python ${{ matrix.python-version }}
      if: "!startsWith(needs.validate.outputs.commit, 'chore:')"
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      if: "!startsWith(needs.validate.outputs.commit, 'chore:')"
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint
      if: "!startsWith(needs.validate.outputs.commit, 'chore:')"
      run: |
        flake8

    - name: Test
      if: "!startsWith(needs.validate.outputs.commit, 'chore:')"
      run: |
        coverage run -m pytest -v

    - name: Coverage
      if: "!startsWith(needs.validate.outputs.commit, 'chore:') && matrix.python-version == 3.7"
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      run: |
        coveralls
